{"version":3,"sources":["Redux/contacts/contacts-actions.js","Redux/contacts/contacts-operations.js","Redux/contacts/contacts-selector.js","ContactList/ContactsList.js","Filter/Filter.js","Forms/AddContactForm.js","App.js","Redux/contacts/contacts-reducer.js","Redux/store.js","index.js"],"names":["getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","updateFilter","axios","defaults","baseURL","getContacts","dispatch","a","get","data","addContact","name","number","contact","post","deleteContact","contactId","delete","getItems","state","contacts","items","getFilter","filter","isLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","trim","includes","ContactsList","useSelector","contactsSelectors","useDispatch","useEffect","contactsOperations","className","map","id","type","onClick","color","height","width","Filter","value","onChange","e","contactsActions","target","Form","useState","setName","setNumber","handleChange","event","resetForm","onSubmit","preventDefault","some","item","alert","pattern","title","required","App","createReducer","_","payload","error","message","combineReducers","middleware","getDefaultMiddleware","store","next","action","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3575b70.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const getContactsRequest = createAction('contacts/getContactRequest');\nexport const getContactsSuccess = createAction('contacts/getContactSuccess');\nexport const getContactsError = createAction('contacts/getContactError');\n\nexport const addContactsRequest = createAction('contacts/addContactRequest');\nexport const addContactsSuccess = createAction('contacts/addContactSuccess');\nexport const addContactsError = createAction('contacts/addContactError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactError');\n\nexport const updateFilter = createAction('contacts/UpdateFilter');\n","import axios from 'axios';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const getContacts = () => async dispatch => {\n  dispatch(getContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(getContactsSuccess(data));\n  } catch (error) {\n    dispatch(getContactsError(error));\n  }\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  async dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactsRequest());\n\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      dispatch(addContactsSuccess(data));\n    } catch (error) {\n      dispatch(addContactsError(error));\n    }\n  };\n\nexport const deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactsRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactsSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactsError(error));\n  }\n};\n","import { createSelector } from 'reselect';\n\nexport const getItems = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const isLoading = state => state.contacts.loading;\n\n//мемоизированный селектор\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { contactsSelectors, contactsOperations } from 'Redux/contacts';\nimport './ContactList.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const isLoading = useSelector(contactsSelectors.isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul className=\"contactsList\">\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className=\"item\">\n            <span className=\"itemText\">\n              <span className=\"itemName\">{name}:</span>\n              <span className=\"itemNum\">{number}</span>\n            </span>\n\n            <button\n              type=\"button\"\n              onClick={() => dispatch(contactsOperations.deleteContact(id))}\n              className=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      {isLoading && (\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\n      )}\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from 'Redux/contacts';\nimport './Filter.css';\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"filter\">\n      <label>\n        <span className=\"filterText\">Filter</span>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(contactsActions.updateFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'Redux/contacts/';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(contactsSelectors.getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (items.some(item => item.name === name)) {\n      alert(`${name} already exist in contact list`);\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ name, number }));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label>\n        <h2>Name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <h2>Number</h2>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className=\"button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport ContactsList from './ContactList/ContactsList';\nimport Filter from './Filter/Filter';\nimport Form from './Forms/AddContactForm';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"formsContainer\">\n        <Form />\n      </div>\n      <div className=\"contactsContainer\">\n        <div className=\"contacts\">\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactsList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  getContactsSuccess,\n  getContactsRequest,\n  getContactsError,\n  addContactsSuccess,\n  addContactsRequest,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  updateFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [getContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [updateFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [addContactsError]: (_, { payload }) => payload.message,\n  [getContactsError]: (_, { payload }) => payload.message,\n  [deleteContactsError]: (_, { payload }) => payload.message,\n  [getContactsRequest]: () => null,\n  [addContactsRequest]: () => null,\n  [deleteContactsRequest]: () => null,\n  [updateFilter]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\n//import logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst myMiddleware = store => next => action => {\n  next(action);\n};\n\nconst middleware = [...getDefaultMiddleware(), myMiddleware];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}